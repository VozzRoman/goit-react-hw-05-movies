{"version":3,"file":"static/js/464.6e3b876b.chunk.js","mappings":"uQAEaA,EAAaC,EAAAA,GAAAA,KAAH,6CAIVC,EAAQD,EAAAA,GAAAA,MAAH,6CAILE,EAAeF,EAAAA,GAAAA,OAAH,+OAcZG,EAAQH,EAAAA,GAAAA,MAAH,yE,SCtBLI,EAAc,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAW1B,OACA,+BACA,UAACN,EAAD,CAAYM,SAXO,SAACC,GACrBA,EAAEC,iBACFF,EAASC,EAAEE,cAAcC,KAAKC,OAE9BJ,EAAEE,cAAcC,KAAKC,MAAQ,EAC7B,EAMC,WACE,SAACT,EAAD,WACA,SAACE,EAAD,CACAQ,aAAa,MACbC,KAAK,OACLH,KAAK,OACLI,YAAY,SACZC,UAAU,aAIV,SAACZ,EAAD,CAAcU,KAAK,SAAnB,wBAIH,E,mCCrBIG,GAAWC,EAAAA,EAAAA,OAAK,kBAAK,0BAAL,IAsDtB,EApDe,WACf,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,EAASI,QAErB,IAAMA,EAAST,EAAaU,IAAI,UAEhCC,EAAAA,EAAAA,YAAU,WAAK,wCAId,gHAEyBC,EAAAA,EAAAA,IAAeH,GAFxC,UAEQI,EAFR,OAGQC,EAAOD,EAASC,KAAKC,QAC3BR,QAAQC,IAAIM,GACO,IAAhBA,EAAKE,OALV,yCAMWC,MAAM,yCANjB,OAQEb,EAASU,GARX,kDAUEP,QAAQC,IAAR,MAVF,2DAJc,sBACVC,GADU,mCAiBdS,EAEA,GAAC,CAACT,IAYD,OACD,2BACC,UAAC,IAAD,YACA,SAACvB,EAAD,CAAaC,SAbU,SAACK,GACzB,GAAa,KAAVA,EACF,OAAOyB,MAAO,sBAEfhB,EAAgB,CAACkB,MAAM,GAAD,OAAK3B,KAC3BY,EAAS,GAET,KAOC,SAAC,EAAAgB,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,OACpB,SAACzB,EAAD,CAAU0B,cAAepB,QAM1B,C,mKC1DKqB,EAAU,mCAGT,SAASC,IACf,OAAOC,EAAAA,EAAAA,GAAM,qBAAsB,CAClCC,OAAQ,CACPC,QAASJ,IAGX,CAEM,SAASK,EAAgBC,GAC/B,OAAOJ,EAAAA,EAAAA,GAAM,SAAD,OAAUI,EAAV,YAAwB,CACnCH,OAAQ,CACPC,QAASJ,IAGX,CAEM,SAASO,EAAeD,GAC9B,OAAOJ,EAAAA,EAAAA,GAAM,SAAD,OAAUI,EAAV,YAAwB,CACnCH,OAAQ,CACPC,QAASJ,IAGX,CAEM,SAASQ,EAAgBF,GAC/B,OAAOJ,EAAAA,EAAAA,GAAM,SAAD,OAAUI,GAAM,CAC3BH,OAAQ,CACPC,QAASJ,IAGX,CAEM,SAASZ,EAAeqB,GAC9B,OAAOP,EAAAA,EAAAA,GAAM,uBAAD,OAAwBO,GAAe,CAClDN,OAAQ,CACPC,QAASJ,IAGX,CAxCDE,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/SearchMovie/SearchMovie.styled.js","components/SearchMovie/SearchMovie.jsx","Pages/Movies/Movies.jsx","apiService/apiService.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const SearchForm = styled.form`\nmargin-top: 30px;\n\n`;\nexport const Label = styled.label`\nposition: relative;\n`;\n\nexport const ButtonSearch = styled.button`\ncursor: pointer;\nbackground-color: orange;\ncolor: white;\nborder: none;\nheight: 35px;\nborder-radius: 4px;\nmargin-left: 10px;\ntransition: background-color 250ms linear;\n&:hover{\n\tbackground-color: blue;\n}\n`;\n\nexport const Input = styled.input`\npadding-left: 10px;\nwidth: 30%;\nheight: 30px;\n`;\n\n\n","import { ButtonSearch, Input, Label, SearchForm } from \"./SearchMovie.styled\";\nimport PropTypes from 'prop-types';\nexport const SearchMovie = ({onSubmit}) => {\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tonSubmit(e.currentTarget.name.value);\n\t\n\t\te.currentTarget.name.value = '';\n\t}\n\n\n\t\n\t  return (\n\t\t <>\n\t\t\t<SearchForm onSubmit={handleSubmit}>\n\t\t\t  <Label>\n\t\t\t\t <Input\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tplaceholder=\"search\"\n\t\t\t\t\tclassName=\"input\"\n\t\t\t\t />\n\t\t\t\t \n\t\t\t  </Label>\n\t\t\t  <ButtonSearch type=\"submit\">Search</ButtonSearch>\n\t\t\t</SearchForm>\n\t\t </>\n\t  );\n\t};\n\n\tSearchMovie.propTypes = {\n\t\tonSubmit: PropTypes.func.isRequired,\n\t}","import { getSearchMovie } from \"apiService/apiService\";\nimport { Container } from \"components/App.styled\";\n// import HomeList from \"components/HomeList/HomeList\";\nimport { SearchMovie } from \"components/SearchMovie/SearchMovie\";\nimport { Suspense, useEffect } from \"react\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { useState } from \"react\";\nimport { lazy } from \"react\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nconst HomeList = lazy(()=> import('../../components/HomeList/HomeList'))\n\nconst Movies = () => {\nconst [searchParams, setSearchParams] = useSearchParams();\nconst [films, setFilms] = useState([]);\nconst location = useLocation();\nconsole.log(location.search);\n\nconst search = searchParams.get('query');\n\nuseEffect(()=> {\n\tif(!search){\n\t\treturn;\n\t}\n\tasync function searchMovie(){\n\t\ttry{\n\t\t\tconst response = await getSearchMovie(search);\n\t\t\tconst data = response.data.results;\n\t\t\tconsole.log(data);\n\t\t\tif(data.length === 0) {\n\t\t\t\t\treturn alert('No mathces please enter correct name');\n\t\t\t}\n\t\t\tsetFilms(data);\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t} \n\t}\n\tsearchMovie();\n\t\n},[search])\n\nconst handleFromSubmit = (value) => {\n\tif(value === '') {\n\t\treturn alert ('the field is empty');\n\t}\n\tsetSearchParams({query: `${value}`});\n\tsetFilms([]);\n\n}\n\n\n  return (\n\t<main>\n\t <Container>\n\t\t<SearchMovie onSubmit={handleFromSubmit}/>\n\t\t<Suspense fallback={<Loader/>}/>\n\t\t<HomeList trandingFilms={films} />\n\t\t\n\t </Container>\n\t</main>\n\n  );\n};\n\nexport default Movies;","import axios from \"axios\";\n\n\nconst API_KEY = \"45e036602b450491912e4761702a27c4\";\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport function getTrnadingMovie() {\n\treturn axios('trending/movie/day', {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t})\n}\n\nexport function getCreditsMovie(id) {\n\treturn axios(`movie/${id}/credits`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t})\n}\n\nexport function getReviewMovie(id) {\n\treturn axios(`movie/${id}/reviews`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t})\n}\n\nexport function getDeteilsMovie(id) {\n\treturn axios(`movie/${id}`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t})\n}\n\nexport function getSearchMovie(searchQuery) {\n\treturn axios(`search/movie?&query=${searchQuery}`, {\n\t\tparams: {\n\t\t\tapi_key: API_KEY,\n\t\t}\n\t})\n}\n"],"names":["SearchForm","styled","Label","ButtonSearch","Input","SearchMovie","onSubmit","e","preventDefault","currentTarget","name","value","autoComplete","type","placeholder","className","HomeList","lazy","useSearchParams","searchParams","setSearchParams","useState","films","setFilms","location","useLocation","console","log","search","get","useEffect","getSearchMovie","response","data","results","length","alert","searchMovie","query","Suspense","fallback","Loader","trandingFilms","API_KEY","getTrnadingMovie","axios","params","api_key","getCreditsMovie","id","getReviewMovie","getDeteilsMovie","searchQuery"],"sourceRoot":""}